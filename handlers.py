from create import dp
from aiogram import types
from aiogram.dispatcher.filters import Text
import random
from datetime import datetime
from keyboard import kb_main_menu


# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ö–û–ú–ê–ù–î–´ "START" (–ù–ê–ß–ê–õ–û –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø –° –ë–û–¢–û–ú)
@dp.message_handler(commands = ['start'])
async def mes_start(message: types.Message):
    await message.answer(f'\
    \t–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!üëã\n\
    –£–º–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –í–∞–º –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –∫–æ–Ω—Ñ–µ—Ç!ü¶â\n\
    –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∂–µ—Ä–µ–±—å–µ–≤–∫–æ–π.üé≤\n\
    –ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 –∏ –Ω–µ –±–æ–ª–µ–µ 28 –∫–æ–Ω—Ñ–µ—Ç.üç¨üç¨\n\
    –í—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ—Å—Ç–∞—é—Ç—Å—è –∏–≥—Ä–æ–∫—É, —Å–¥–µ–ª–∞–≤—à–µ–º—É –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥.üî•\n\
    –í —Ö–æ–¥–µ –∏–≥—Ä—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n\
    \t"/login" - –≤–≤–µ—Å—Ç–∏ –∏–º—è –∏–≥—Ä–æ–∫–∞;\n\
    \t"/set" - –∑–∞–¥–∞—Ç—å, –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –±—É–¥–µ–º —Ä–æ–∑—ã–≥—Ä—ã–≤–∞—Ç—å;\n\
    \t"/first" - –ø—Ä–æ–≤–µ—Å—Ç–∏ –∂–µ—Ä–µ–±—å–µ–≤–∫—É;\n\
    \t"/step 5" - —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥;\n\
    \t"/rules" - –≤—ã–∑–≤–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–≥—Ä—ã;\n\
    \t"/help" - –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â—å—é;\n\
    \t"/feedback" - –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É, –ø—Ä–æ–±–µ–ª, –∞ –∑–∞—Ç–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ –æ–± –∏–≥—Ä–µ.\n\
    \n\t–î–õ–Ø –ù–ê–ß–ê–õ–ê –ò–ì–†–´ –≤–≤–µ–¥–∏—Ç–µ ‚ùó"/login"‚ùó –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–µ ‚ùó–∏–º—è‚ùó.\n')

# –§–£–ù–ö–¶–ò–Ø –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø (–ó–ù–ê–ö–û–ú–°–¢–í–û –° –ò–ì–†–û–ö–û–ú)
@dp.message_handler(commands = ['login'])
async def mes_login(message: types.Message):
    global login
    login = message.text.split()[1]
    await message.answer(f'\t–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {login}üëã!\n\
    –°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑—ã–≥—Ä–∞—Ç—å‚ùì\n\
    –ú–æ–∂–Ω–æ 100 –∏ –¥–∞–∂–µ 200!\n\
    –í–≤–µ–¥–∏—Ç–µ /set –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞.')
    user = []
    user.append(datetime.now())
    user.append(message.from_user.id)
    user.append(message.from_user.full_name)
    # user.append(message.from_user.user_name)
    user.append(login)
    user = list(map(str, user))
    with open('user_data.txt', 'a', encoding = 'UTF-8') as data:
        data.write(' | '.join(user) + '\n')



# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ö–û–ú–ê–ù–î–´ "SET" (–û–ë–©–ï–ï –ö–û–õ–ò–ß–ï–°–¢–í–û –ö–û–ù–§–ï–¢)
@dp.message_handler(commands = ['set'])
async def mes_set(message: types.Message):
    global total
    count = int(message.text.split()[1])
    valid = False
    if count < 56:
        await message.answer(f'\t–•–æ—Ç–∏—Ç–µ —Ä–∞–∑—ã–≥—Ä–∞—Ç—å "{count}"? –≠—Ç–æ –º–∞–ª–æ. –ò–≥—Ä–∞ –±—ã—Å—Ç—Ä–æ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è. –ó–∞–¥–∞–π—Ç–µ –±–æ–ª—å—à–µ 60.')
    elif count > 200:
        await message.answer(f'\t–í–∞—à–µ —á–∏—Å–ª–æ "{count}"? –ò–≥—Ä–∞ –±—É–¥–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ–π. –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—å—à–µ 200.')
    else: 
        valid = True
    if valid == True:    
        total = count
        await message.answer(f'\
    \t–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ - {total}.\n\
    –ß—Ç–æ–±—ã –≤—Å–µ –±—ã–ª–æ —á–µ—Å—Ç–Ω–æ, –æ–ø—Ä–µ–¥–µ–ª–∏–º —á–µ–π –±—É–¥–µ—Ç –ø–µ—Ä–≤—ã–π —Ö–æ–¥ —Å –ø–æ–º–æ—â—å—é –∂–µ—Ä–µ–±—å–µ–≤–∫–∏.\n\
    –í–≤–µ–¥–∏—Ç–µ "/first" –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.')


# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ö–û–ú–ê–ù–î–´ "FIRST" (–ñ–ï–†–ï–ë–¨–ï–í–ö–ê - –ö–¢–û –ü–ï–†–í–´–ô –•–û–î–ò–¢)
@dp.message_handler(commands = ['first'])
async def mes_first(message: types.Message):
    global total
    max = 28
    min = 1
    number = int(message.text.split()[1])
    if number < 1:
        await message.answer(f'\t–í–∞—à–µ —á–∏—Å–ª–æ "{number}"? –û–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 1!')
    elif number > 100:
        await message.answer(f'\t–í–∞—à–µ —á–∏—Å–ª–æ "{number}"? –û–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 100!')
    else: 
        valid = True
    if valid == True:    
        user_lot = number
        bot_lot = random.randint(0, 101)
        await message.answer(f'\
    \t–í–∞—à–µ —á–∏—Å–ª–æ - {user_lot}? –û—Ç–ª–∏—á–Ω–æ!\n\
    –¢–µ–ø–µ—Ä—å —É–º–Ω—ã–π –±–æ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–≤–æ–µ —á–∏—Å–ª–æ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏–º, —á–µ–π —Ö–æ–¥ –ø–µ—Ä–≤—ã–π.')
        while True:                 
            bot_lot = random.randint(0, 101)
            first = 3
            try:
                if user_lot > bot_lot:
                    first = 1            # –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    break
                elif user_lot == bot_lot:
                    first = 0            # –ù–∏—á—å—è
                elif user_lot < bot_lot:
                    first = 2            # –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –±–æ—Ç–∞
                    break
            except: 
                first = 3
        if first == 1:
            await message.answer(f'\
        \t–ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {bot_lot}. –í—ã –¥–µ–ª–∞–µ—Ç–µ –ø–µ—Ä–≤—ã–π —Ö–æ–¥.\n\
        –í–≤–µ–¥–∏—Ç–µ "/step" –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –æ—Ç 1 –¥–æ 28.')
        elif first == 0:
            await message.answer(f'\
        \t–ë–æ—Ç —Ç–æ–∂–µ –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {bot_lot}.\n\
        –í–≤–µ–¥–∏—Ç–µ "/first" –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∂–µ—Ä–µ–±—å–µ–≤–∫—É.\n')
        elif first == 2: # –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Ö–æ–¥ –±–æ—Ç–∞, —Ç–æ –æ–Ω —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ —ç—Ç–æ–º –º–æ–¥—É–ª–µ.
            await message.answer(f'\t–ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {bot_lot} –∏ –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–≤—ã–π —Ö–æ–¥.\n')
            bot_step = total%(max + 1)           
            total -= bot_step
            await message.answer(f'\
        \t–ë–æ—Ç –≤–∑—è–ª {bot_step}. –û—Å—Ç–∞–ª–æ—Å—å {total}.\n\
        –í–∞—à —Ö–æ–¥. –í–≤–µ–¥–∏—Ç–µ "/step" –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –æ—Ç 1 –¥–æ 28.')



# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ö–û–ú–ê–ù–î–´ "STEP" (–ò–ì–†–ê –ù–ê–ß–ò–ù–ê–Ø –° –•–û–î–ê –ò–ì–†–û–ö–ê)
@dp.message_handler(commands = ['step'])
async def mes_step(message: types.Message):
    global total    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –Ω–∞ –∫–æ–Ω—É.
    max = 28        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∑–∞ –æ–¥–∏–Ω —Ö–æ–¥.
    min = 1         # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∑–∞ –æ–¥–∏–Ω —Ö–æ–¥. 
    number = int(message.text.split()[1])
    valid = False
    if number < 1:
        await message.answer(f'\t–•–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å "{number}"? –ù—É–∂–Ω–æ –Ω–µ –º–µ–Ω–µ–µ –æ–¥–Ω–æ–π!')
    elif number > 28:
        await message.answer(f'\t–•–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å "{number}"? –ú–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ 28!')
    else: 
        valid = True
    if valid == True:    
        user_step = number
        total -= user_step
        if total > 0:
            await message.answer(f'\t–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å "{total}" –∫–æ–Ω—Ñ–µ—Ç. –°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥ –±–æ—Ç–∞.')
        else:
            await message.answer('\
    \t–ö–æ–Ω—Ñ–µ—Ç –±–æ–ª—å—à–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å. –í—ã –ø–æ–±–µ–¥–∏–ª–∏!!!üèÜ –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –µ—â–µ, –≤–≤–µ–¥–∏—Ç–µ "/start".')
        if total > max:                        # –•–æ–¥ –±–æ—Ç–∞, –µ—Å–ª–∏ –∫–æ–Ω—Ñ–µ—Ç > 28.
            if total%(max + 1) != 0:
                bot_step = total%(max + 1) 
                total -= bot_step
                await message.answer(f'\
    \t–ë–æ—Ç –≤–∑—è–ª {bot_step}. –û—Å—Ç–∞–ª–æ—Å—å {total}.\n\
    –í–∞—à —Ö–æ–¥. –í–≤–µ–¥–∏—Ç–µ "/step" –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –æ—Ç 1 –¥–æ 28.')
            else:
                bot_step = random.randint(1, 29)
                total -= bot_step
                await message.answer(f'\
    \t–ë–æ—Ç –≤–∑—è–ª {bot_step}. –û—Å—Ç–∞–ª–æ—Å—å {total}.\n\
    –í–∞—à —Ö–æ–¥. –í–≤–µ–¥–∏—Ç–µ "/step" –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –æ—Ç 1 –¥–æ 28.')

        elif total >= min and total <= max:    # –•–æ–¥ –±–æ—Ç–∞, –µ—Å–ª–∏ –∫–æ–Ω—Ñ–µ—Ç < 28.
            bot_step = total            
            total -= bot_step
            await message.answer(f'\
    \t–ë–æ—Ç –≤–∑—è–ª {bot_step}. –ö–æ–Ω—Ñ–µ—Ç –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏ –±–æ—Ç –ø–æ–±–µ–¥–∏–ª.‚úå\n\
    –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –µ—â–µ, –≤–≤–µ–¥–∏—Ç–µ "/start".')


# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ö–û–ú–ê–ù–î–´ "RULES" (–ü–†–ê–í–ò–õ–ê –ò–ì–†–´)
@dp.message_handler(commands = ['rules'])
async def mes_rules(message: types.Message):
    await message.answer(f'\
    \t–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –ø—Ä–æ—Å—Ç—ã–µ:\n\
    \t- –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∂–µ—Ä–µ–±—å–µ–≤–∫–æ–π.\n\
    \t- –ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 –∏ –Ω–µ –±–æ–ª–µ–µ 28 –∫–æ–Ω—Ñ–µ—Ç.\n\
    \t- –í—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ—Å—Ç–∞—é—Ç—Å—è –∏–≥—Ä–æ–∫—É, —Å–¥–µ–ª–∞–≤—à–µ–º—É –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥.\n\
    –í–≤–µ–¥–∏—Ç–µ "/set" –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞.\n',\
    reply_markup = kb_main_menu)

# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ö–û–ú–ê–ù–î–´ "FEEDBACK" (–û–¢–ó–´–í –û–ë –ò–ì–†–ï)        
@dp.message_handler(commands = ['feedback'])
async def mes_yes(message: types.Message):
    await message.answer(f'\t–£–≤–∞–∂–∞–µ–º—ã–π {message.from_user.full_name},\n\
    —É–º–Ω—ã–π –±–æ—Ç –ø—Ä–∏–º–µ—Ç –∫ —Å–≤–µ–¥–µ–Ω–∏—é –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.ü§ù')
    print(f'–û—Ç –∏–≥—Ä–æ–∫–∞ {message.from_user.full_name} –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "{message.text}".')    


# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ö–û–ú–ê–ù–î–´ "HELP" (–û–ö–ê–ó–ê–ù–ò–ï –ü–û–ú–û–©–ò)
@dp.message_handler(commands = ['help'])
async def mes_yes(message: types.Message):
    global login
    await message.answer(f'\
    \t–£–≤–∞–∂–∞–µ–º—ã–π {login},\n\
    –µ—Å–ª–∏ –í—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –±–æ—Ç—É, —ç—Ç–æ –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —É –í–∞—Å –Ω–∏–∑–∫–∏–π IQ.\n\
    –î–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ –ø–æ–±–µ–∂–¥–∞–µ—Ç –ø–æ –≤—Å–µ–π –ø–ª–∞–Ω–µ—Ç–µ.\
    C–∫–æ—Ä–æ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ª—é–¥—å–º–∏.\n\
    –•–æ—Ç–∏—Ç–µ —Å–ø–∞—Å—Ç–∏—Å—å?üòé\n\
    –ù–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –≤ —Ä–∞–∑–¥–µ–ª–µ "/feedback" (–∫–æ–º–∞–Ω–¥–∞, –ø—Ä–æ–±–µ–ª, —Ç–µ–∫—Å—Ç) –∏ –º—ã –ø–æ–¥—É–º–∞–µ–º, –∫–∞–∫ –í–∞–º –ø–æ–º–æ—á—å.',\
    reply_markup = kb_main_menu)


# –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ê –°–û–û–ë–©–ï–ù–ò–Ø –ü–†–ò –ü–û–°–¢–£–ü–õ–ï–ù–ò–ò –ù–ï–ü–†–ï–î–£–°–ú–û–¢–†–ï–ù–ù–´–• –ö–û–ú–ê–ù–î      
@dp.message_handler()
async def mes_all(message: types.Message):
    global login
    await message.answer(f'\
    \t–£–≤–∞–∂–∞–µ–º—ã–π {login}, –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥.')
    print(f'–û—Ç –∏–≥—Ä–æ–∫–∞ {message.from_user.full_name} –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "{message.text}".')
